# yaml-language-server: $schema=https://json.schemastore.org/github-workflow.json
name: Test
on:
  workflow_call:
  pull_request:
    branches:
      - "main"
  push:
    branches:
      - "**"
      - "!main"

jobs:
  test:
    name: Test
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          submodules: recursive

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Publish Event File
        uses: actions/upload-artifact@v2
        with:
          name: event-file
          path: ${{ github.event_path }}

      - name: Unit Tests
        run: docker buildx build
            --target testresults
            -t testresults
            --build-arg IGNORE_TEST_FAILURE=true
            --output test_artifacts 
            .

      - name: Publish Test Results
        uses: actions/upload-artifact@v3
        with:
          name: unit-test-results
          path: test_artifacts

      # - name: Check Unit Tests
      #   if: ${{ always() }}
      #   uses: scacap/action-surefire-report@v1
      #   with: 
      #     fail_on_test_failures: true
      #     fail_if_no_tests: true
      #     skip_publishing: true
      #     report_paths: test_artifacts/**/*.junit.xml

      - name: Unit Test Artifacts
        run: docker buildx build
            --target testartifacts
            -t testartifacts
            --build-arg IGNORE_TEST_FAILURE=true
            --output test_artifacts 
            .

      - name: Analyze Coverage Results
        uses: irongut/CodeCoverageSummary@v1.3.0
        with:
          filename: "test_artifacts/coverage.cobertura.xml"
          badge: true
          fail_below_min: true
          format: markdown
          hide_branch_rate: false
          hide_complexity: true
          indicators: true
          output: both
          thresholds: '80 85'

      - name: Move Coverage Report
        run: mv code-coverage-results.md test_artifacts/

      - name: Publish Coverage Results
        uses: actions/upload-artifact@v3
        with:
          name: unit-test-results
          path: test_artifacts
